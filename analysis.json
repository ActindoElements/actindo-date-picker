{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`<actindo-date-picker>` implements a material design based date picker.\n\n### Features\n\n- format can be set based on style and location\n- date is automatically validated during input\n- date and year can be selected\n- minimum and maximum date can be set",
      "summary": "",
      "path": "actindo-date-picker.html",
      "properties": [
        {
          "name": "format",
          "type": "string",
          "description": "Use moment.js date format convention",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 113,
              "column": 20
            },
            "end": {
              "line": 117,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"l\""
        },
        {
          "name": "locale",
          "type": "string",
          "description": "Moment.js locale definition",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 20
            },
            "end": {
              "line": 126,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "allowEmpty",
          "type": "boolean",
          "description": "Is empty a valid value",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 20
            },
            "end": {
              "line": 135,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "dateObject",
          "type": "Object",
          "description": "Resulting date",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 20
            },
            "end": {
              "line": 147,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_onDateChanged\""
            }
          }
        },
        {
          "name": "value",
          "type": "string",
          "description": "Value for paper input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 152,
              "column": 20
            },
            "end": {
              "line": 157,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_onValueChanged\""
            }
          }
        },
        {
          "name": "_pickerVisible",
          "type": "boolean",
          "description": "Is date picker visible",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 20
            },
            "end": {
              "line": 168,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "name",
          "type": "string",
          "description": "Name for the date field",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 173,
              "column": 20
            },
            "end": {
              "line": 176,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "label",
          "type": "string",
          "description": "Label for the paper input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 20
            },
            "end": {
              "line": 184,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "minDate",
          "type": "string",
          "description": "Minimum date",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 20
            },
            "end": {
              "line": 193,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_onMinDateChanged\""
            }
          }
        },
        {
          "name": "maxDate",
          "type": "string",
          "description": "Maximum date",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 198,
              "column": 20
            },
            "end": {
              "line": 202,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_onMaxDateChanged\""
            }
          }
        },
        {
          "name": "_minDate",
          "type": "Date",
          "description": "Minimum date as date object",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 209,
              "column": 20
            },
            "end": {
              "line": 213,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "null"
        },
        {
          "name": "_maxDate",
          "type": "Date",
          "description": "Minimum date as date object",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 220,
              "column": 20
            },
            "end": {
              "line": 224,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "null"
        },
        {
          "name": "invalid",
          "type": "boolean",
          "description": "Validation result",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 229,
              "column": 20
            },
            "end": {
              "line": 234,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "_errorMessage",
          "type": "string",
          "description": "Error message in case of invalid input",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 241,
              "column": 20
            },
            "end": {
              "line": 244,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "required",
          "type": "boolean",
          "description": "Required property - passed on to underlying paper input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 249,
              "column": 20
            },
            "end": {
              "line": 253,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "Disabled property - passed on to underlying paper input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 258,
              "column": 20
            },
            "end": {
              "line": 262,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "validate",
          "description": "Validate for form support",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 269,
              "column": 12
            },
            "end": {
              "line": 299,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_isValidDate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 301,
              "column": 12
            },
            "end": {
              "line": 303,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            }
          ]
        },
        {
          "name": "_onMinDateChanged",
          "description": "Converts given min date to date object used by date picker",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 314,
              "column": 12
            },
            "end": {
              "line": 320,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue",
              "type": "String"
            },
            {
              "name": "oldValue",
              "type": "String"
            }
          ]
        },
        {
          "name": "_onMaxDateChanged",
          "description": "Converts given max date to date object used by date picker",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 330,
              "column": 12
            },
            "end": {
              "line": 336,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue",
              "type": "String"
            },
            {
              "name": "oldValue",
              "type": "String"
            }
          ]
        },
        {
          "name": "_onValueChanged",
          "description": "Set value for calendar after waiting time and if valid",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 346,
              "column": 12
            },
            "end": {
              "line": 369,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue",
              "type": "String"
            },
            {
              "name": "oldValue",
              "type": "String"
            }
          ]
        },
        {
          "name": "_convertToOutputFormat",
          "description": "Convert selected date value to format used in input field",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 378,
              "column": 12
            },
            "end": {
              "line": 383,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String"
            }
          ]
        },
        {
          "name": "_convertToDate",
          "description": "Convert input date to date in calendar if valid",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 392,
              "column": 12
            },
            "end": {
              "line": 401,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String"
            }
          ]
        },
        {
          "name": "_onDateChanged",
          "description": "Convert selected date in calendar to output date",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 411,
              "column": 12
            },
            "end": {
              "line": 415,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue",
              "type": "String"
            },
            {
              "name": "oldValue",
              "type": "String"
            }
          ]
        },
        {
          "name": "prepareUi",
          "description": "Handle UI - set correct input type for mobile devices",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 420,
              "column": 12
            },
            "end": {
              "line": 428,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_getOS",
          "description": "Get the operating system from userAgent/platform to set the correct UI properties",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 437,
              "column": 12
            },
            "end": {
              "line": 462,
              "column": 13
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "String"
          }
        },
        {
          "name": "connectedCallback",
          "description": "Binds the click events during initial callback",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 467,
              "column": 12
            },
            "end": {
              "line": 475,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onUp",
          "description": "Mouse \"Up\" event - Handle correct behavior to close calendar",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 484,
              "column": 12
            },
            "end": {
              "line": 532,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "Object"
            }
          ]
        },
        {
          "name": "_onDown",
          "description": "Mouse \"Down\" event - Handle correct behavior to close calendar",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 541,
              "column": 12
            },
            "end": {
              "line": 558,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "Object"
            }
          ]
        },
        {
          "name": "_openCloseCalender",
          "description": "Adds or removes event listeners for mouse events - open / closes calender",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 565,
              "column": 12
            },
            "end": {
              "line": 572,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_openCalendar",
          "description": "Open date picker calendar",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 579,
              "column": 12
            },
            "end": {
              "line": 602,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_closeCalendar",
          "description": "Close date picker calendar",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 609,
              "column": 12
            },
            "end": {
              "line": 626,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 101,
          "column": 8
        },
        "end": {
          "line": 627,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "Polymer.Element",
      "name": "ActindoDatePicker",
      "attributes": [
        {
          "name": "format",
          "description": "Use moment.js date format convention",
          "sourceRange": {
            "start": {
              "line": 113,
              "column": 20
            },
            "end": {
              "line": 117,
              "column": 25
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "locale",
          "description": "Moment.js locale definition",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 20
            },
            "end": {
              "line": 126,
              "column": 25
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "allow-empty",
          "description": "Is empty a valid value",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 20
            },
            "end": {
              "line": 135,
              "column": 25
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "value",
          "description": "Value for paper input",
          "sourceRange": {
            "start": {
              "line": 152,
              "column": 20
            },
            "end": {
              "line": 157,
              "column": 25
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "name",
          "description": "Name for the date field",
          "sourceRange": {
            "start": {
              "line": 173,
              "column": 20
            },
            "end": {
              "line": 176,
              "column": 25
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "label",
          "description": "Label for the paper input",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 20
            },
            "end": {
              "line": 184,
              "column": 25
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "min-date",
          "description": "Minimum date",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 20
            },
            "end": {
              "line": 193,
              "column": 25
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "max-date",
          "description": "Maximum date",
          "sourceRange": {
            "start": {
              "line": 198,
              "column": 20
            },
            "end": {
              "line": 202,
              "column": 25
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "invalid",
          "description": "Validation result",
          "sourceRange": {
            "start": {
              "line": 229,
              "column": 20
            },
            "end": {
              "line": 234,
              "column": 25
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "required",
          "description": "Required property - passed on to underlying paper input",
          "sourceRange": {
            "start": {
              "line": 249,
              "column": 20
            },
            "end": {
              "line": 253,
              "column": 25
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "disabled",
          "description": "Disabled property - passed on to underlying paper input",
          "sourceRange": {
            "start": {
              "line": 258,
              "column": 20
            },
            "end": {
              "line": 262,
              "column": 25
            }
          },
          "metadata": {},
          "type": "boolean"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "invalid-changed",
          "description": "Fired when the `invalid` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "actindo-date-picker"
    }
  ]
}
